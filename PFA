{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","mount_file_id":"1bjrghu4SYHkdXWTc9j0yfIg4xKZiJMh7","authorship_tag":"ABX9TyO8hpOVwYnJh9uMg9b4iy1L"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"Of5jJKSwji89"},"outputs":[],"source":["import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"code","source":["from tensorflow import keras\n","from keras.layers import Input, Lambda, Dense, Flatten\n","from keras.models import Model\n","from keras.applications.vgg16 import VGG16\n","from keras.applications.vgg16 import preprocess_input\n","from keras.preprocessing import image\n","from keras.preprocessing.image import ImageDataGenerator\n","from keras.models import Sequential\n","import numpy as np\n","from glob import glob\n","import matplotlib.pyplot as plt\n","import os"],"metadata":{"id":"iIv8Xl6BU2C6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["IMAGE_SIZE = [224, 224]\n","data_path=\"/content/drive/MyDrive/Projet_PFA\"\n","\n","source_path_covid = os.path.join(data_path, 'covid')\n","source_path_normal = os.path.join(data_path, 'normal')\n","source_path_pneumonia = os.path.join(data_path, 'pneumonia')\n","\n","print(f\"There are {len(os.listdir(source_path_covid))} X_ray images affected by covid .\")\n","print(f\"There are {len(os.listdir(source_path_normal))} X_ray images not affected .\")\n","print(f\"There are {len(os.listdir(source_path_pneumonia))} X_ray images affected by pneumonia .\")\n"],"metadata":{"id":"-WkPyGJoU8wy","executionInfo":{"status":"ok","timestamp":1683365470137,"user_tz":-60,"elapsed":4,"user":{"displayName":"othmen derouiche","userId":"13262568872010014604"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"696eb840-2d9f-424e-a976-fd53d7fc03d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["There are 2313 X_ray images affected by covid .\n","There are 2313 X_ray images not affected .\n","There are 2313 X_ray images affected by pneumonia .\n"]}]},{"cell_type":"code","source":["def create_train_val_dirs(root_path):\n","\n","  train_covid = os.path.join(root_path, 'training/covid')\n","  train_normal = os.path.join(root_path, 'training/normal')\n","  train_pneumonia = os.path.join(root_path, 'training/pneumonia')\n","\n","  os.makedirs(train_covid)\n","  os.makedirs(train_normal)\n","  os.makedirs(train_pneumonia)\n","\n","\n","  validation_covid= os.path.join(root_path, 'validation/covid')\n","  validation_normal = os.path.join(root_path, 'validation/normal')\n","  validation_pneumonia = os.path.join(root_path, 'validation/pneumonia')\n","\n","  os.makedirs(validation_covid)\n","  os.makedirs(validation_normal)\n","  os.makedirs(validation_pneumonia)"],"metadata":{"id":"piy71-hFQRIf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import random\n","from shutil import copyfile"],"metadata":{"id":"xTkD4swtVkqH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","def split_data(SOURCE_DIR, TRAINING_DIR, VALIDATION_DIR, SPLIT_SIZE):\n","\n","  all_files= []\n","\n","  for file_name in os.listdir(SOURCE_DIR):\n","    file_path=os.path.join(SOURCE_DIR,file_name)\n","    if os.path.getsize(file_path):\n","      all_files.append(file_name)\n","    else:\n","      print('{} is zero length , so ignoring '.format(file_name))\n","\n","  n_files = len(all_files)\n","  split_point =int(n_files * SPLIT_SIZE)\n","\n","  shuffled =random.sample(all_files,n_files)\n","\n","  train_set=shuffled[:split_point]\n","  test_set=shuffled[split_point:]\n","\n","  for file_name in train_set:\n","    copyfile(os.path.join(SOURCE_DIR,file_name),os.path.join(TRAINING_DIR,file_name))\n","\n","  for file_name in test_set:\n","    copyfile(os.path.join(SOURCE_DIR,file_name),os.path.join(VALIDATION_DIR,file_name))"],"metadata":{"id":"-ESYJ-2vRB5B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["create_train_val_dirs(root_path=data_path)"],"metadata":{"id":"Ii8yleDlStXE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["COVID_SOURCE_DIR=\"/content/drive/MyDrive/Projet_PFA/covid\"\n","NORMAL_SOURCE_DIR=\"/content/drive/MyDrive/Projet_PFA/normal\"\n","PNEUMONIA_SOURCE_DIR=\"/content/drive/MyDrive/Projet_PFA/pneumonia\"\n","\n","TRAINING_DIR = \"/content/drive/MyDrive/Projet_PFA/training\"\n","VALIDATION_DIR = \"/content/drive/MyDrive/Projet_PFA/validation\"\n","\n","TRAINING_COVID =os.path.join(TRAINING_DIR, \"covid/\")\n","VALIDATION_COVID =os.path.join(VALIDATION_DIR, \"covid/\")\n","\n","TRAINING_NORMAL =os.path.join(TRAINING_DIR, \"normal/\")\n","VALIDATION_NORMAL =os.path.join(VALIDATION_DIR, \"normal/\")\n","\n","TRAINING_PNEUMONIA =os.path.join(TRAINING_DIR, \"pneumonia/\")\n","VALIDATION_PNEUMONIA =os.path.join(VALIDATION_DIR, \"pneumonia/\")\n","\n","split_size = .9\n","\n"],"metadata":{"id":"0vz4xZZTRz33"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["split_data(PNEUMONIA_SOURCE_DIR, TRAINING_PNEUMONIA, VALIDATION_PNEUMONIA, split_size)"],"metadata":{"id":"4QWUikvdYL65"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["split_data(NORMAL_SOURCE_DIR, TRAINING_NORMAL, VALIDATION_NORMAL, split_size)\n","split_data(COVID_SOURCE_DIR, TRAINING_COVID, VALIDATION_COVID, split_size)"],"metadata":{"id":"WNClzFNvaA2g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"\\n\\nOriginal covid's directory has {len(os.listdir(COVID_SOURCE_DIR))} images\")\n","print(f\"Original normal's directory has {len(os.listdir(NORMAL_SOURCE_DIR))} images\\n\")\n","print(f\"Original pneumonia's directory has {len(os.listdir(PNEUMONIA_SOURCE_DIR))} images\\n\")\n","\n","\n","print(f\"There are {len(os.listdir(TRAINING_COVID))} images of covid for training\")\n","print(f\"There are {len(os.listdir(TRAINING_NORMAL))} images of normal for training\")\n","print(f\"There are {len(os.listdir(TRAINING_PNEUMONIA))} images of pneumonia for training\")\n","\n","print(f\"There are {len(os.listdir(VALIDATION_COVID))} images of covid for validation\")\n","print(f\"There are {len(os.listdir(VALIDATION_NORMAL))} images of normal for validation\")\n","print(f\"There are {len(os.listdir(VALIDATION_PNEUMONIA))} images of pneumonia for validation\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0X6bsscXdGT8","executionInfo":{"status":"ok","timestamp":1683365750610,"user_tz":-60,"elapsed":300,"user":{"displayName":"othmen derouiche","userId":"13262568872010014604"}},"outputId":"5c4c24af-5bab-4bdf-caad-241d1b792f50"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n","Original covid's directory has 2313 images\n","Original normal's directory has 2313 images\n","\n","Original pneumonia's directory has 2313 images\n","\n","There are 2081 images of covid for training\n","There are 2081 images of normal for training\n","There are 2081 images of pneumonia for training\n","There are 232 images of covid for validation\n","There are 232 images of normal for validation\n","There are 232 images of pneumonia for validation\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"KBhasjmMro95"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vgg = VGG16(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)\n","for layer in vgg.layers:\n","    layer.trainable = False"],"metadata":{"id":"Kp9kwvE-YHO_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["folders = glob('/content/drive/MyDrive/Projet_PFA/training/*')\n","print(len(folders))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lisr2T9yZzbW","executionInfo":{"status":"ok","timestamp":1683365755659,"user_tz":-60,"elapsed":5,"user":{"displayName":"othmen derouiche","userId":"13262568872010014604"}},"outputId":"0823b61d-54dc-416d-980a-896e4ca2ac69"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"code","source":["x = Flatten()(vgg.output)\n","prediction = Dense(len(folders), activation='softmax')(x)\n","model = Model(inputs=vgg.input, outputs=prediction)\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"23MQRBjQYLBM","executionInfo":{"status":"ok","timestamp":1683365757523,"user_tz":-60,"elapsed":305,"user":{"displayName":"othmen derouiche","userId":"13262568872010014604"}},"outputId":"175a7274-4152-4588-c268-07f371098417"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_2 (InputLayer)        [(None, 224, 224, 3)]     0         \n","                                                                 \n"," block1_conv1 (Conv2D)       (None, 224, 224, 64)      1792      \n","                                                                 \n"," block1_conv2 (Conv2D)       (None, 224, 224, 64)      36928     \n","                                                                 \n"," block1_pool (MaxPooling2D)  (None, 112, 112, 64)      0         \n","                                                                 \n"," block2_conv1 (Conv2D)       (None, 112, 112, 128)     73856     \n","                                                                 \n"," block2_conv2 (Conv2D)       (None, 112, 112, 128)     147584    \n","                                                                 \n"," block2_pool (MaxPooling2D)  (None, 56, 56, 128)       0         \n","                                                                 \n"," block3_conv1 (Conv2D)       (None, 56, 56, 256)       295168    \n","                                                                 \n"," block3_conv2 (Conv2D)       (None, 56, 56, 256)       590080    \n","                                                                 \n"," block3_conv3 (Conv2D)       (None, 56, 56, 256)       590080    \n","                                                                 \n"," block3_pool (MaxPooling2D)  (None, 28, 28, 256)       0         \n","                                                                 \n"," block4_conv1 (Conv2D)       (None, 28, 28, 512)       1180160   \n","                                                                 \n"," block4_conv2 (Conv2D)       (None, 28, 28, 512)       2359808   \n","                                                                 \n"," block4_conv3 (Conv2D)       (None, 28, 28, 512)       2359808   \n","                                                                 \n"," block4_pool (MaxPooling2D)  (None, 14, 14, 512)       0         \n","                                                                 \n"," block5_conv1 (Conv2D)       (None, 14, 14, 512)       2359808   \n","                                                                 \n"," block5_conv2 (Conv2D)       (None, 14, 14, 512)       2359808   \n","                                                                 \n"," block5_conv3 (Conv2D)       (None, 14, 14, 512)       2359808   \n","                                                                 \n"," block5_pool (MaxPooling2D)  (None, 7, 7, 512)         0         \n","                                                                 \n"," flatten_1 (Flatten)         (None, 25088)             0         \n","                                                                 \n"," dense_1 (Dense)             (None, 3)                 75267     \n","                                                                 \n","=================================================================\n","Total params: 14,789,955\n","Trainable params: 75,267\n","Non-trainable params: 14,714,688\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.compile(\n","  loss='categorical_crossentropy',\n","  optimizer='adam',\n","  metrics=['accuracy']\n",")"],"metadata":{"id":"qlT2MIviYtoI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from keras.preprocessing.image import ImageDataGenerator\n","from sklearn.model_selection import train_test_split\n","import os\n","from shutil import copyfile"],"metadata":{"id":"_1SAQZ46YvrC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_split = 0.9\n","test_split = 0.1\n","img_size=(224,224)\n","batch_size=10"],"metadata":{"id":"_Jjc4uk9MquE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_datagen = ImageDataGenerator(rescale = 1./255,\n","                                   shear_range = 0.2,\n","                                   zoom_range = 0.2,\n","                                   horizontal_flip = True,\n","                                   validation_split=test_split )\n","\n","test_datagen = ImageDataGenerator(rescale = 1./255\n","                                  )\n","\n","training_set = train_datagen.flow_from_directory(directory=TRAINING_DIR,\n","                                                 target_size = img_size,\n","                                                 batch_size = batch_size,\n","                                                 class_mode = 'categorical',\n","                                                 subset='training')\n","\n","test_set = test_datagen.flow_from_directory(directory=VALIDATION_DIR,\n","                                                 target_size = img_size,\n","                                                 batch_size = batch_size,\n","                                                 class_mode = 'categorical',\n","                                                 shuffle=False       )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CzcU17PPYyrz","executionInfo":{"status":"ok","timestamp":1683365764085,"user_tz":-60,"elapsed":3,"user":{"displayName":"othmen derouiche","userId":"13262568872010014604"}},"outputId":"b7b1531c-b34f-48ee-dc8d-2011ae24c5cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 5590 images belonging to 3 classes.\n","Found 692 images belonging to 3 classes.\n"]}]},{"cell_type":"code","source":["r = model.fit_generator(\n","  training_set,\n","  validation_data=test_set,\n","  epochs=1,\n","  steps_per_epoch=len(training_set),\n","  validation_steps=len(test_set)\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QVd8QnT_de-V","outputId":"d01c6b52-91b1-45df-a5fd-065e3f37f442","executionInfo":{"status":"ok","timestamp":1683365949519,"user_tz":-60,"elapsed":182990,"user":{"displayName":"othmen derouiche","userId":"13262568872010014604"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["559/559 [==============================] - 182s 324ms/step - loss: 0.3218 - accuracy: 0.8798 - val_loss: 0.5418 - val_accuracy: 0.9104\n"]}]},{"cell_type":"code","source":["from keras.models import load_model\n","import keras.utils as image"],"metadata":{"id":"nVsODl1Gdihd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["MODEL_LINK =os.path.join(data_path, \"model/chest_xray.h5/\")\n","os.makedirs(MODEL_LINK)\n","model.save(MODEL_LINK)\n","# model.save('chest_xray.h5')\n"],"metadata":{"id":"UvWlggd2dwOO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model=load_model(MODEL_LINK)"],"metadata":{"id":"Nqi_uKxldd77"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.save('chest_xray.h5')"],"metadata":{"id":"BY133b86joPw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["img=image.load_img(\"/content/sample_data/covid1.jpeg\",target_size=(224,224))\n","x=image.img_to_array(img)\n","x=np.expand_dims(x, axis=0)\n","img_data=preprocess_input(x)\n","classes=model.predict(img_data)\n","print(classes)\n","classes=classes.squeeze()\n","resultat=np.argmax(classes)\n","print(resultat)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OQhxpWywdyRJ","executionInfo":{"status":"ok","timestamp":1683367959246,"user_tz":-60,"elapsed":1086,"user":{"displayName":"othmen derouiche","userId":"13262568872010014604"}},"outputId":"926ebbd0-15c8-421f-c5e7-697662e4ec31"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 67ms/step\n","[[3.2920463e-05 6.4242446e-01 3.5754257e-01]]\n","1\n"]}]},{"cell_type":"code","source":["if resultat==0:\n","    print(\"Person is Normal \")\n","elif resultat==1 :\n","    print(\"Person is Affected By COVID\")\n","else :\n","    print(\"Result is Affected By PNEUMONIA\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jnv9K0_7d_IN","executionInfo":{"status":"ok","timestamp":1683369120719,"user_tz":-60,"elapsed":300,"user":{"displayName":"othmen derouiche","userId":"13262568872010014604"}},"outputId":"d4855251-5032-4e90-c87d-fb14e02522fc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Person is Affected By COVID\n"]}]}]}